{
  "StartAt": "Lambda Invoke",
  "States": {
    "Lambda Invoke": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:950464210903:function:snowflake_replication_dev_fetch_replication_list:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Glue.AWSGlueException"
          ],
          "BackoffRate": 2,
          "IntervalSeconds": 2,
          "MaxAttempts": 3
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "SNS Publish"
        }
      ],
      "Next": "Map"
    },
    "Map": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Snowflake data replication",
        "States": {
          "Snowflake data replication": {
            "Type": "Task",
            "Retry": [
              {
                "ErrorEquals": [
                  "Glue.AWSGlueException"
                ],
                "BackoffRate": 2,
                "IntervalSeconds": 10,
                "MaxAttempts": 3
              }
            ],
            "Resource": "arn:aws:states:::glue:startJobRun.sync",
            "Parameters": {
              "JobName": "snowflake-replication-dev-source-to-snowflake-sync",
              "Arguments": {
                "--src_type.$": "$.src_type",
                "--src_db.$": "$.src_db",
                "--src_schema.$": "$.src_schema",
                "--src_table.$": "$.src_table",
                "--snowflake_db.$": "$.snowflake_db",
                "--snowflake_schema.$": "$.snowflake_schema",
                "--snowflake_table.$": "$.snowflake_table",
                "--primary_key.$": "$.primary_key"
              }
            },
            "End": true
          }
        }
      },
      "Next": "DBT RunTask",
      "Retry": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "BackoffRate": 2,
          "MaxAttempts": 3,
          "IntervalSeconds": 60,
          "Comment": "Incase of Throttling exception",
          "MaxDelaySeconds": 100
        }
      ],
      "MaxConcurrency": 10,
      "ItemsPath": "$.body",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "SNS Publish"
        }
      ]
    },
    "DBT RunTask": {
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:runTask.sync",
      "Parameters": {
        "LaunchType": "FARGATE",
        "Cluster": "arn:aws:ecs:us-east-1:950464210903:cluster/ch-dbt-runner",
        "TaskDefinition": "arn:aws:ecs:us-east-1:950464210903:task-definition/dbt-runner:1",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "Subnets": [
              "subnet-04e2a060dae71ff4f",
              "subnet-063fceb536d5a4e53"
            ],
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              "sg-0ba5427939507d47b"
            ]
          }
        },
        "Overrides": {
          "ContainerOverrides": [
            {
              "Name": "dbt-runner",
              "Command": [
                "dbt",
                "run"
              ]
            }
          ]
        }
      },
      "Next": "SNS Publish"
    },
    "SNS Publish": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "Message.$": "$",
        "TopicArn": "arn:aws:sns:us-east-1:950464210903:stepfunction_sns_notfiier_dev"
      },
      "End": true
    }
  }
}